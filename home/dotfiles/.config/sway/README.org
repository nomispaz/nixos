* General notes
- Ideas for the config are taken from https://github.com/arcolinux/arcolinux-sway/blob/master/etc/skel/.config/sway/config.d/default

* Setup config environment
#+begin_src sway :tangle config
# Config for sway
#
# Read `man 5 sway` for a complete reference.

# user config directory
include $HOME/.config/sway/config.d/*
#+end_src

* Autostart
** Setup environment
#+begin_src sway :tangle config.d/autostart
# setup environment
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP
exec hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP
#+end_src

** Start authentification agent
#+begin_src sway :tangle config.d/autostart
# start authentication agent
exec /usr/lib64/polkit-kde-authentication-agent-1
#+end_src

** Keyring
- Use kwallet if kde is installed
#+begin_src sway :tangle config.d/autostart
exec kwalletd6
exec /usr/lib/pam_kwallet_init 
#+end_src

** Start networkmanager applet
#+begin_src sway :tangle config.d/autostart
# start networkmanager applet
exec nm-applet --indicator
#+end_src

** Start notification agent
#+begin_src sway :tangle config.d/autostart
# start notification agent
exec dunst 
#+end_src

** Gammastep for night light
#+begin_src sway :tangle config.d/autostart
# start gammastep indicator for systray
exec gammastep-indicator 
#+end_src

** Tuxedo control center applet
- Autostart tuxedo-control-center and send it to scratchpad
#+begin_src sway :tangle config.d/autostart
# start tuxedo control center
exec tuxedo-control-center
# send tcc to scratchpad
for_window [class="tuxedo-control-center"] move scratchpad
#+end_src

** Waybar
#+begin_src sway :tangle config.d/autostart
# start statusbar
exec waybar
#+end_src

** Autotiling
#+begin_src sway :tangle config.d/autostart
# enable autotiling via additional personal script
exec $HOME/git_repos/dotfiles/sway/scripts/autotiling/main.py
#+end_src

** Background
#+begin_src sway :tangle config.d/autostart
# set default background
output "*" bg $HOME/git_repos/dotfiles/sway/background/wald.jpg fill
#+end_src

* Theming
** Inner/outer gaps
#+begin_src sway :tangle config.d/theming
# Theming
#
# set inner and outer window gaps
gaps inner 3
gaps outer 3 
#+end_src

** Border of windows
- Hide titlebar
- Thin borders
#+begin_src sway :tangle config.d/theming
# thin borders and hide titlebar
default_border pixel 2
smart_borders off
#+end_src

** Default font
- Font Awesome in size 14
#+begin_src sway :tangle config.d/theming
# set default font and size
font Font Awesome 5 Free 14
#+end_src

** Window decorations
#+begin_src sway :tangle config.d/theming
# Window decorations
# class                 border  backgr. text    indicator child_border
client.focused          #88c0d0 #434c5e #eceff4 #8fbcbb   #88c0d0
client.focused_inactive #88c0d0 #2e3440 #d8dee9 #4c566a   #4c566a
client.unfocused        #88c0d0 #2e3440 #d8dee9 #4c566a   #4c566a
client.urgent           #ebcb8b #ebcb8b #2e3440 #8fbcbb   #ebcb8b
#+end_src

* Input configuration
#+begin_src sway :tangle config.d/keybindings
# Input configuration
# 
# configure touchpad
input type:touchpad {
      dwt enabled
      tap enabled
      natural_scroll disabled
}

# set keyboard input to german
input type:keyboard xkb_layout "de"

# activate numpad on startup
input type:keyboard xkb_numlock enabled
#+end_src

* set Super-Key to Windows-Key
#+begin_src sway :tangle config.d/keybindings
# set super-key to windows-key
set $mod Mod4
#+end_src

* assign standard programs to variables
#+begin_src sway :tangle config.d/keybindings
# assign programs to variables
set $terminal alacritty
set $browser firefox
set $files dolphin
set $editor emacsclient -nc
#+end_src
* Preferred application launcher
#+begin_src  sway :tangle config.d/keybindings
# set default start menu to rofi
set $menu rofi -show drun
#+end_src

* Key bindings

** General
*** Start programs
#+begin_src sway :tangle config.d/keybindings
# Keybindings
#
# start programs
bindsym $mod+b exec $browser
bindsym $mod+e exec $editor
bindsym $mod+Return exec $terminal
bindsym $mod+s exec steam
#+end_src

*** Open startmenu
#+begin_src sway :tangle config.d/keybindings
# open start menu
bindsym $mod+d exec $menu
#+end_src

*** Create Screeshots
#+begin_src sway :tangle config.d/keybindings
# create screenshot with grim
bindsym $mod+PRINT exec grim -g "$(slurp)"
#+end_src

*** Kill focused window
#+begin_src sway :tangle config.d/keybindings
# close window
bindsym $mod+q kill
#+end_src

*** Exit sway
#+begin_src sway :tangle config.d/keybindings
# close sway
bindsym $mod+Escape exit
#+end_src

*** Reload configuration
#+begin_src sway :tangle config.d/keybindings
# reload sway config
bindsym $mod+Ctrl+r reload
#+end_src

** Moving windows around

*** Drag and resize windows with mouse
- move mod + left mouse
- resize mod + right mouse
#+begin_src sway :tangle config.d/keybindings
# resize and move windows with the mouse
# move: mod+left
# resize: mod+right
floating_modifier $mod normal
#+end_src

*** Move the focused window
#+begin_src sway :tangle config.d/keybindings
# move the focused window with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#+end_src

*** Move your focus around
#+begin_src sway :tangle config.d/keybindings
# switch focus between windows with arrow keys
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
#+end_src
    
** Workspaces

*** Switch to workspace
#+begin_src sway :tangle config.d/keybindings
# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
#+end_src

*** Move focused window to workspace
#+begin_src sway :tangle config.d/keybindings
# move window to worlspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
#+end_src

*** Scratchpad
#+begin_src sway :tangle config.d/keybindings
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show
#+end_src

** Layout

*** Vertical or horizontal split
#+begin_src sway :tangle config.d/keybindings
# split window horizontal or vertical with the next split
# this is necessary for the manual tiling. Since the autotiling is active, this shouldn't be needed.
bindsym $mod+Shift+h splith
bindsym $mod+Shift+v splitv
#+end_src

*** Window to fullscreen
#+begin_src sway :tangle config.d/keybindings
# toggle fullscreen mode for window
bindsym $mod+f fullscreen
#+end_src

*** Different layout styles
- Remark: If only one side of the screen should be tabbed, then first set the split to vertical, then change layout to tabbed, then start new program
#+begin_src sway :tangle config.d/keybindings
# change window layout to tabbed
bindsym $mod+Shift+Return layout tabbed

# remove tabbed layout and change to default split layout
bindsym $mod+Shift+BackSpace layout toggle split
#+end_src

** Resize mode 
#+begin_src sway :tangle config.d/keybindings
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will grow the containers height
    # down will shrink the containers height
    bindsym Left resize shrink width 10px
    bindsym Up resize grow height 10px
    bindsym Down resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"
#+end_src

** Function keys

*** Screen Brightness
#+begin_src sway :tangle config.d/keybindings
# Function keys
#
# change brightness
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set 5%+
#+end_src

*** Sound volume up, down and toggle mute
#+begin_src sway :tangle config.d/keybindings
# change sound volume
bindsym XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindsym XF86AudioRaiseVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bindsym XF86AudioMute exec wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle 
#+end_src

*** Toggle microphone mute and display via dunst
#+begin_src sway :tangle config.d/keybindings
# mute microphone
bindsym $mod+y exec ~/dotfiles/sway/scripts/audio/toggle_mic_mute.sh
#+end_src

* Window rules
** Set programs to floating
#+begin_src sway :tangle config.d/windowrules
# set floating for window roles
for_window [app_id="pavucontrol" ] floating enable, resize set width 40 ppt height 30 ppt

for_window [window_role="pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_role="Preferences"] floating enable
for_window [window_type="dialog"] floating enable
for_window [window_type="menu"] floating enable
for_window [window_role="About"] floating enable
for_window [title="File Operation Progress"] floating enable, border pixel 1, sticky enable, resize set width 40 ppt height 30 ppt
for_window [title="Picture in picture"] floating enable, sticky enable
for_window [title="Save File"] floating enable
#+end_src

